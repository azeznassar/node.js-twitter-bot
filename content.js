module.exports = {
    quotes: [  //source: http://www.thecorememory.com/Epigrams_on_Programming.pdf
        'One man\'s constant is another man\'s variable.',
        'Functions delay binding: data structures induce binding. Moral: Structure data late in the programming process.',
        'Syntactic sugar causes cancer of the semi-colons.',
        'Every program is a part of some other program and rarely fits.',
        'If a program manipulates a large amount of data, it does so in a small number of ways.',
        'Symmetry is a complexity reducing concept (co-routines include sub-routines); seek it everywhere.',
        'It is easier to write an incorrect program than understand a correct one.',
        'A programming language is low level when its programs require attention to the irrelevant.', // 8
        'It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.',
        'Get into a rut early: Do the same processes the same way. Accumulate idioms. Standardize. The only difference (!) between Shakespeare and you was the size of his idiom list - not the size of his vocabulary.',
        'If you have a procedure with 10 parameters, you probably missed some.',
        'Recursion is the root of computation since it trades description for time.',
        'If two people write exactly the same program, each should be put in micro-code and then they certainly won\'t be the same.',
        'In the long run every program becomes rococco - then rubble.',
        'Everything should be built top-down, except the first time.',
        'Every program has (at least) two purposes: the one for which it was written and another for which it wasn\'t.', // 16
        'If a listener nods his head when you\'re explaining your program, wake him up.',
        'A program without a loop and a structured variable isn\'t worth writing.',
        'A language that doesn\'t affect the way you think about programming, is not worth knowing.',
        'Wherever there is modularity there is the potential for misunderstanding: Hiding information implies a need to check communication.',
        'Optimization hinders evolution.',
        'A good system can\'t have a weak command language.',
        'To understand a program you must become both the machine and the program.',
        'Perhaps if we wrote programs from childhood on, as adults we\'d be able to read them.',
        'One can only display complex information in the mind. Like seeing, movement or flow or alteration of view is more important than the static picture, no matter how lovely.',
        'There will always be things we wish to say in our programs that in all known languages can only be said poorly.',
        'Once you understand how to write a program get someone else to write it.', // 27
        'Around computers it is difficult to find the correct unit of time to measure progress. Some cathedrals took a century to complete. Can you imagine the grandeur and scope of a program that would take as long?',
        'For systems, the analogue of a face-lift is to add to the control graph an edge that creates a cycle, not just an additional node.',
        'In programming, everything we do is a special case of something more general - and often we know it too quickly.',
        'Simplicity does not precede complexity, but follows it.', // 31
        'Programmers are not to be measured by their ingenuity and their logic but by the completeness of their case analysis.',
        'The 11th commandment was "Thou Shalt Compute" or "Thou Shalt Not Compute" - I forget which.',       
        'The string is a stark data structure and everywhere it is passed there is much duplication of process. It is a perfect vehicle for hiding information.',
        'Everyone can be taught to sculpt: Michelangelo would have had to be taught how not to. So it is with the great programmers.',
        'The use of a program to prove the 4-color theorem will not change mathematics - it merely demonstrates that the theorem, a challenge for a century, is probably not important to mathematics.',
        'The most important computer is the one that rages in our skulls and ever seeks that satisfactory external emulator. The standardization of real computers would be a disaster - and so it probably won\'t happen.',
        'Structured Programming supports the law of the excluded muddle.',   
        'Re graphics: A picture is worth 10K words - but only those to describe the picture. Hardly any sets of 10K words can be adequately described with pictures.',
        'There are two ways to write error-free programs; only the third one works.',
        'Some programming languages manage to absorb change, but withstand progress.',
        'You can measure a programmer\'s perspective by noting his attitude on the continuing vitality of FORTRAN.',
        'In software systems it is often the early bird that makes the worm.',   
        'Sometimes I think the only universal in the computing field is the fetch-execute-cycle.',
        'The goal of computation is the emulation of our synthetic abilities, not the understanding of our analytic ones.',
        'Like punning, programming is a play on words.',
        'As Will Rogers would have said, "There is no such thing as a free variable."',
        'The best book on programming for the layman is "Alice in Wonderland"; but that\'s because it\'s the best book on anything for the layman.',   
        'Giving up on assembly language was the apple in our Garden of Eden: Languages whose use squanders machine cycles are sinful. The LISP machine now permits LISP programmers to abandon bra and fig-leaf.',
        'When we understand knowledge-based systems, it will be as before - except our finger-tips will have been singed.', // 50
        'Bringing computers into the home won\'t change either one, but may revitalize the corner saloon.',
        'Systems have sub-systems and sub-systems have sub-systems and so on ad infinitum - which is why we\'re always starting over.',
        'So many good ideas are never heard from again once they embark in a voyage on the semantic gulf.',   
        'Beware of the Turing tar-pit in which everything is possible but nothing of interest is easy.',
        'A LISP programmer knows the value of everything, but the cost of nothing.',
        'Software is under a constant tension. Being symbolic it is arbitrarily perfectible; but also it is arbitrarily changeable.',
        'It is easier to change the specification to fit the program than vice versa.',
        'Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it.',   
        'In English every word can be verbed. Would that it were so in our programming languages.',
        'Dana Scott is the Church of the Lattice-Way Saints.',
        'In programming, as in everything else, to be in error is to be reborn.',
        'In computing, invariants are ephemeral.',
        'When we write programs that "learn", it turns out we do and they don\'t.',   
        'Often it is means that justify ends: Goals advance technique and technique survives even when goal structures crumble.',
        'Make no mistake about it: Computers process numbers - not symbols. We measure our understanding (and control) by the extent to which we can arithmetize an activity.',
        'Making something variable is easy. Controlling duration of constancy is the trick.',
        'Think of all the psychic energy expended in seeking a fundamental distinction between "algorithm" and "program".',
        'If we believe in data structures, we must believe in independent (hence simultaneous) processing. For why else would we collect items within a structure? Why do we tolerate languages that give us the one without the other?',   
            ] // 68
}